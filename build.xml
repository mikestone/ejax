<project name="ejax" default="dist" basedir=".">
  <!-- Properties -->
  <property name="bin" location="bin"/>
  <property name="lib" location="lib"/>
  <property name="base.build" location="build"/>
  <property name="base.build.jar" location="${base.build}/jar"/>
  <property name="base.src" location="src"/>
  <property name="java.src" location="${base.src}/java"/>
  <property name="java.test.src" location="${base.src}/test/java"/>
  <property name="java.build.jar" location="${base.build.jar}"/>
  <property name="java.test.build" location="${base.build}/test"/>
  <property name="java.dist" location="dist"/>
  <property name="java.jar.name" value="ejax.jar"/>
  <property name="java.jar" location="${bin}/${java.jar.name}"/>
  <property name="java.include" location="/usr/lib/jvm/java-6-openjdk/include"/>
  <property name="native.build" location="${base.build}/native"/>
  <property name="native.src" location="${base.src}/native"/>
  <property name="native.classes" value="org.ejax.Curses"/>
  <property name="native.src.header" location="${native.src}/ejaxnative.h"/>
  <property name="native.src.files" location="${native.src}/ejaxnative.c"/>
  <property name="native.build.object" location="${native.build}/ejaxnative.o"/>
  <property name="native.build.shared.object" location="${native.build}/libejaxnative.so"/>
  <property name="javascript.src" location="${base.src}/javascript"/>
  <property name="javascript.test.src" location="${base.src}/test/javascript"/>
  <property name="javascript.dest" value="${base.build}/html"/>
  <property name="javascript.core.combined" value="${javascript.dest}/ejax-core-complete.js"/>
  <property name="javascript.html.combined" value="${javascript.dest}/ejax-complete.js"/>
  <property name="javascript.html.minified" value="${javascript.dest}/ejax-complete-min.js"/>
  <property name="javascript.terminal.combined" value="${javascript.dest}/ejax-terminal-complete.js"/>
  <property name="yuicompressor.jar" value="${lib}/yuicompressor-2.4.6.jar"/>
  <property name="workingdir" location="${base.build}/tmp"/>
  <property name="core.js.files" value="monkeypatches.js,ejax.js,screen.js,buffers.js,bindings.js,modes.js,global.js"/>
  <property name="tests.toRun" value=""/>

  <!-- Macros -->
  <macrodef name="yuicompress">
    <attribute name="src" />
    <attribute name="dest" />
    <attribute name="args" />

    <sequential>
      <echo level="info">Running yuicompressor on @{src}</echo>
      <java jar="${yuicompressor.jar}" fork="true">
        <arg line="@{args} -o" />
        <arg file="@{dest}" />
        <arg file="@{src}" />
      </java>
    </sequential>
  </macrodef>

  <macrodef name="concatsource">
    <attribute name="destfile" />
    <attribute name="sourcedir" />
    <attribute name="sourcefiles" />
    <attribute name="workingdir" default="${workingdir}" />

    <element name="filters" optional="true" description="Additonal filters to apply to individual files"/>

    <sequential>
      <echo level="info">Concatenating</echo>
      <echo level="info">    Source Files : @{sourcefiles}</echo>
      <echo level="info">    In Source Dir : @{sourcedir}</echo>
      <echo level="info">    To : @{destfile}</echo>

      <delete dir="@{workingdir}" quiet="true"/>
      <mkdir dir="@{workingdir}"/>
      <copy todir="@{workingdir}">
        <filelist dir="@{sourcedir}" files="@{sourcefiles}" />
        <filterchain>
          <filters />
          <fixcrlf fixlast="true" eof="remove"/>
        </filterchain>
      </copy>

      <concat destfile="@{destfile}" fixlastline="true" >
        <filelist dir="@{workingdir}" files="@{sourcefiles}" />
      </concat>

      <delete dir="@{workingdir}" quiet="true"/>
    </sequential>
  </macrodef>

  <!-- Paths and filesets -->
  <path id="java.classpath">
    <pathelement location="${javascript.src}"/>
  </path>

  <path id="java.test.classpath">
    <path refid="java.classpath"/>
    <pathelement location="${java.test.build}"/>
    <pathelement location="${javascript.test.src}"/>
    <pathelement location="${java.jar}"/>
    <pathelement location="${javascript.core.combined}"/>
  </path>

  <!-- Compilation related targets -->
  <target name="init" description="Initialize build environment.">
    <mkdir dir="${base.build}"/>
    <mkdir dir="${java.build.jar}"/>
    <mkdir dir="${java.dist}"/>
    <mkdir dir="${native.build}"/>
  </target>

  <target name="compile" depends="init" description="Compile the Java source.">
    <javac srcdir="${java.src}" destdir="${java.build.jar}" classpathref="java.classpath" debug="true"/>
    <javah class="${native.classes}" outputFile="${native.src.header}" classpath="${java.build.jar}"/>
    <echo message="Compiling to object files..."/>
    <exec executable="gcc" failonerror="true">
      <arg line="-fpic -I${java.include} -c ${native.src.files} -o ${native.build.object}"/>
    </exec>
    <echo message="Compiling to shared object files..."/>
    <exec executable="gcc" failonerror="true">
      <arg line="-shared -o ${native.build.shared.object} ${native.build.object} -lcurses"/>
    </exec>
  </target>

  <target name="concat-js" description="Concat the combined javascript files.">
    <concatsource destfile="${javascript.core.combined}" sourcedir="${javascript.src}" sourcefiles="${core.js.files}"/>
    <concatsource destfile="${javascript.html.combined}" sourcedir="${javascript.src}" sourcefiles="jquery-1.5.2.js,${core.js.files},html-io.js"/>
    <concatsource destfile="${javascript.terminal.combined}" sourcedir="${javascript.src}" sourcefiles="${core.js.files},terminal-io.js"/>
  </target>

  <target name="compress-js" depends="concat-js" description="Compress the javascript files.">
    <yuicompress src="${javascript.html.combined}" dest="${javascript.html.minified}" args=""/>
  </target>

  <target name="prepare-html" depends="compress-js" description="Prepare the test html files.">
    <copy todir="${javascript.dest}">
      <fileset dir="${javascript.src}" includes="**/*.html"/>
      <fileset dir="${javascript.src}" includes="**/*.js"/>
    </copy>
  </target>

  <target name="jar" depends="compile,concat-js" description="Prepare and create the jar.">
    <copy todir="${java.build.jar}" file="${javascript.terminal.combined}"/>
    <copy todir="${java.build.jar}" file="${native.build.shared.object}"/>
    <jar jarfile="${java.jar}" basedir="${base.build.jar}">
      <manifest>
        <attribute name="Main-Class" value="org.ejax.Main"/>
      </manifest>
    </jar>
  </target>

  <target name="dist" depends="jar,prepare-html" description="Generate the distribution.">
  </target>

  <target name="clean" description="Clean up.">
    <delete dir="${base.build}"/>
    <delete dir="${java.dist}"/>
    <delete file="${java.jar}"/>
  </target>

  <target name="clean-all" depends="clean" description="Clean up everything."/>

  <!-- Test related targets -->
  <target name="test-init" description="Initialize test environment.">
    <mkdir dir="${base.build}"/>
    <mkdir dir="${java.test.build}"/>
  </target>

  <target name="test-compile" depends="dist, test-init" description="Compile the Java test source.">
    <javac srcdir="${java.test.src}" destdir="${java.test.build}" classpathref="java.test.classpath" debug="true"/>
  </target>

  <target name="test" depends="test-compile" description="Run the suite of tests.">
    <taskdef name="runit" classname="org.ejax.javascript.RUnitTask" classpathref="java.test.classpath"/>
    <runit classpathref="java.test.classpath" testsToRun="${tests.toRun}">
      <fileset dir="${javascript.test.src}">
        <include name="*Test.js"/>
      </fileset>
    </runit>
  </target>
</project>
